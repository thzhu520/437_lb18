### Get all images
GET http://localhost:3000/api/images

### Get images filtered by name
GET http://localhost:3000/api/images?name=Shiba

### PATCH name successfully
PATCH http://localhost:3000/api/images/6639fcbec4b901a342e949eb
Content-Type: application/json

{
  "newName": "Shiba Inuuu"
}

### PATCH with missing name
PATCH http://localhost:3000/api/images/6639fcbec4b901a342e949eb
Content-Type: application/json

{
}

### PATCH with long name
PATCH http://localhost:3000/api/images/6639fcbec4b901a342e949eb
Content-Type: application/json

{
  "newName": "A".repeat(101)
}

### PATCH with invalid ObjectId
PATCH http://localhost:3000/api/images/bad-id
Content-Type: application/json

{
  "newName": "Anything"
}

### PATCH with long name (101 characters)
PATCH http://localhost:3000/api/images/6639fcbec4b901a342e949eb
Content-Type: application/json

{
  "newName": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaX"
}

# lab 24a


### 1. Success case (should return 201 Created)
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "username": "testuser123",
  "password": "password123"
}

### 2. Bad Request (should return 400)
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "username": "testuser123"
}

### 3. Username already exists (should return 409 Conflict)
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "username": "testuser123",
  "password": "password123"
}

# lab 24a pt 2
### 1. Success case (should return JWT token)
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "username": "testuser123",
  "password": "password123"
}

### 2. Bad Request (should return 400)
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "password": "password123"
}

### 3. Bad credentials (should return 401)
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "username": "testuser123",
  "password": "wrongpassword"
}
